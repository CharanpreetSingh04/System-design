Design online/offline indicator system

Always note all the requirements first.
   a. Show users as online when they are online and offline when the user is not online.

Design of DB schema:

User
------------------------
user_id              int
is_online        boolean

The access pattern of this problem is, that the client will send the user_id and the server has to send the status (small key value read).
When we know that it will be a small read/write then we see that we don't need a disc with a higher memory.
               ___________
   O           | API      |
  _|_   --->   | Server   |  ---->   Database
  / \          |__________|
  User

Identify the API calls that are required.
1. Get status - 
   a. One way is to make an API call to fetch the status for each user. That way we can consolidate get status responses of all users on the page.
   b. Another way is to make batch API calls to fetch statuses for a batch of users so that we can reduce the number of API calls to the server.
2. Put status -
   a. Pull base model - API server will ping the client in the loop to check if the user is online/offline. 
                        This cannot be possible here as API server can not talk to the front end.
   b. Push base model - Client will push the info that it is alive/unalive.
                        This can be achieved by sending info to the server that the client is alive. 
                        This will happen repeatedly in the interval of threshold time (20 seconds). This is known as heartbeat.
                        If the client does not respond in this interval then we mark that user offline.
                        Instead of is_online, we need to store the last heartbeat which the client has sent to the server.
                        
                        Pulse
                        ------------------------
                        user_id              int
                        last_hb              int
                        Now, whenever heartbeat is received then an update on the database is done which updates the last_hb column with current time in epoch seconds.
                        
                        Update pulse set last_hb = NOW() where user_id = :userId
                        For eg:
                        pulse
                        ------------------------
                        u1                100645
                        u2                100032

While fetching user status, 
1. If user entry does not exist in DB ---> offline
2. If last_hb < NOW() - threshold(20 sec) ---> offline
3. Online


